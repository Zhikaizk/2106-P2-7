@using Project.Models.Feedback
@{
  var retrieveAll = FeedbackTDG.findAll();
  var retrievePending = FeedbackTDG.getPendingFeedback();
  var retrieveResolved = FeedbackTDG.getResolvedFeedback();
}
@{
  ViewData["Title"] = "Administrator Feedback System";
}

<div class="text-center">
  <h1 class="display-4">Feedback System</h1>
  <form class="form-inline" method="post" asp-controller="Feedback" asp-action="feedbackAdmin">
    <div class="form-group">
      <label class="fbTypeFilter" for="FeedbackStatus">Status:</label>
      <select class="form-control fbTypeFilter" id="FeedbackStatus" name="fbType">
        <option value="1">All</option>
        <option value="2">Pending</option>
        <option value="3">Resolved</option>
      </select>
    </div>
     <button type="submit" id="fbSubmitBtnUpdate" class="btn btn-success fbTypeFilter">Get Results</button>
  </form>
</div>
<div>
  <table class="table table-bordered">
    <thead>
      <tr>
        <th scope="col">Feedback ID</th>
        <th scope="col">Content</th>
        <th scope="col">Household Email</th>
        <th scope="col">Topic</th>
        <th scope="col">Status</th>
      </tr>
    </thead>
    <tbody>
      @switch ((int)(ViewData["fbTypeKey"]))
      {
        case 1 :
        @for (int i = 0; i < retrieveAll.Count; i++)
        {
          <tr>
            @* feedbackId *@
            <th scope="row"><a href='@Url.Action("feedbackAdminReply", "Feedback",new {feedbackId=retrieveAll[i][0], email=retrieveAll[i][2], status=retrieveAll[i][3]})' ;>@retrieveAll[i][0]</a></th>
            @* hosueholdEmail *@
            <td>@retrieveAll[i][1]</td>
            @* hosueholdEmail *@
            <td>@retrieveAll[i][2]</td>

            @* feedbackType *@
            <td>@retrieveAll[i][4]</td>

            @* feedbackStatus *@
            <td>@retrieveAll[i][3]</td>
          </tr>
          }
        break;
        case 2 :
          @for (int i = 0; i < retrievePending.Count; i++)
        {
          <tr>
            @* feedbackId *@
            <th scope="row"><a href='@Url.Action("feedbackAdminReply", "Feedback",new {feedbackId=retrievePending[i][0], email=retrievePending[i][2], status=retrievePending[i][3]})' ;>@retrievePending[i][0]</a></th>
            @* hosueholdEmail *@
            <td>@retrievePending[i][1]</td>
            @* hosueholdEmail *@
            <td>@retrievePending[i][2]</td>

            @* feedbackType *@
            <td>@retrievePending[i][4]</td>

            @* feedbackStatus *@
            <td>@retrievePending[i][3]</td>

          </tr>
        }
        break;
        default:
          @for (int i = 0; i < retrieveResolved.Count; i++)
        {
          <tr>
            @* feedbackId *@
            <th scope="row"><a runat="server" href='@Url.Action("feedbackAdminReply", "Feedback",new {feedbackId=retrieveResolved[i][0], email=retrieveResolved[i][2], status=retrieveResolved[i][3]})'>@retrieveResolved[i][0]</a></th>
          
            @* hosueholdContent *@
            <td>@retrieveResolved[i][1]</td>

            @* hosueholdEmail *@
            <td>@retrieveResolved[i][2]</td>

            @* feedbackType *@
            <td>@retrieveResolved[i][4]</td>

            @* feedbackStatus *@
            <td>@retrieveResolved[i][3]</td>
          </tr>
        }
        break;
      } 
    </tbody>
  </table>
</div>